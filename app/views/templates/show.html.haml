%article
  = hidden_field_tag 'glimpse_ninja', @glimpse.id

  %section.row.col-sm-12.template-help.highlighted
    Highlight any text to
    %span.highlight-like
      like it
    ,
    %span.highlight-dislike
      dislike it
    or mark it as
    %span.highlight-question
      confusing
  .row.col-sm-10.col-sm-offset-1.text-center
    %h1#template-name.highlightable{ :id => "name:#{@template.name.id}:name" }= @template.name_text

  .row.col-sm-10.col-sm-offset-1.text-center
    %h3#template-desc.highlightable{ :id => "desc:#{@template.desc.id}:desc" }= @template.desc_text

  .row.col-sm-6.col-sm-offset-3.text-center
    = image_tag @template.image_url if !@template.image.blank?

  .row.col-sm-8.col-sm-offset-2.text-center
    %section.highlightable.template-text{ :id => "body:#{@template.body.id}:text" }= @template.body_text

  .row.col-sm-8.col-sm-offset-2.text-left.rtbgroups
    - @template.rtbgroups.each do |g|
      .rtbgroup
        %h6.highlightable.rtbgroup-name{ id: "rtbgroup:#{g.id}:name" }= g.name
        %ul#blah.rtbs
          - g.active_rtbs.each do |r|
            %li.highlightable.rtb-text{ id: "rtb:#{r.id}:text" }= r.text

  .row.col-sm-10.col-sm-offset-1.text-right.template-actions

  #highlight-options
    %span.rate{ "data-rating" => 'like' } like
    %span.rate{ "data-rating" => 'dislike' } dislike
    %span.rate{ "data-rating" => 'question' } confusing

:javascript
  var working_range;
  var working_element;
  String.prototype.splice = function( idx, rem, s ) {
    return (this.slice(0,idx) + s + this.slice(idx + Math.abs(rem)));
  };
  var regex = /(<([^>]+)>)/ig

  $('.highlightable').click(function(){
    event.stopPropagation();
    working_range = window.getSelection().getRangeAt(0);
    if (working_range.collapsed) {
      $('#highlight-options').hide();
    } else {
      working_element = $(this);
      if ( working_range.endOffset > working_range.startOffset) {
        markSelection();
        $('#highlight-options').show();
      }
    }
  });

  $('html').click(function() { $('#highlight-options').hide(); });
  $('span.rate').click(function(){ submitSelected( working_element, $(this).data( "rating" ) ); })

  function submitSelected(el, rating) {
    console.log(rating);
    var source = el;
    var clean_content = source.html().replace(regex, "");
    var content = source.html();

    var text = working_range.toString();
    var length = text.length;
    var start = clean_content.indexOf(text);
    var end = start + length

    while ( clean_content.charAt(start-1) != ' ' && start != 0 ) {
      start--;
    }

    while ( clean_content.charAt(end) != ' ' && end != clean_content.length ) {
      end++;
    }

    length = end - start;
    text = clean_content.substring(start, end);

    info = el.prop('id').split(':');
    type = info[0];
    id = info[1];
    attr = info[2];

    console.log('type: ' + type );
    console.log('id: ' + id );
    console.log('attr: ' + attr );
    console.log('start: ' + start );
    console.log('end: ' + end );
    console.log('length: ' + length );
    console.log('text: ' + text );

    $.ajax({
      type: "POST",
      url: "/highlights.json",
      dataType: "json",
      data: {
        highlight: {
          glimpse_id: $('#glimpse_ninja').val(),
          highlightable_id: id,
          highlightable_type: type,
          highlightable_attr: attr,
          start: start,
          end: end,
          length: length,
          text: text,
          rating: rating
        }
      },
      error: function(data) {
        console.log('error');
        return console.log(data);
      },
      success: function(data) {
        console.log('success');
        console.log(data);
        console.log( content );

        start = content.indexOf(text);
        content = content.splice( (start + length), 0, '</span>' );
        content = content.splice( start, 0, '<span class="highlighted highlight-'+ data.rating +'">' );
        source.html( content );
        $('#highlight-options').hide();
      }
    });
  }

  var markSelection = (function() {
    var markerTextChar = "\ufeff";
    var markerTextCharEntity = "&#xfeff;";

    var markerEl, markerId = "sel_" + new Date().getTime() + "_" + Math.random().toString().substr(2);

    var selectionEl;

    return function() {
      var sel, range;

      if (document.selection && document.selection.createRange) {
          // Clone the TextRange and collapse
          range = document.selection.createRange().duplicate();
          range.collapse(false);

          // Create the marker element containing a single invisible character by creating literal HTML and insert it
          range.pasteHTML('<span id="' + markerId + '" style="position: relative;">' + markerTextCharEntity + '</span>');
          markerEl = document.getElementById(markerId);
      } else if (window.getSelection) {
          sel = window.getSelection();

          if (sel.getRangeAt) {
              range = sel.getRangeAt(0).cloneRange();
          } else {
              // Older WebKit doesn't have getRangeAt
              range.setStart(sel.anchorNode, sel.anchorOffset);
              range.setEnd(sel.focusNode, sel.focusOffset);

              // Handle the case when the selection was selected backwards (from the end to the start in the
              // document)
              if (range.collapsed !== sel.isCollapsed) {
                  range.setStart(sel.focusNode, sel.focusOffset);
                  range.setEnd(sel.anchorNode, sel.anchorOffset);
              }
          }

          range.collapse(false);

          // Create the marker element containing a single invisible character using DOM methods and insert it
          markerEl = document.createElement("span");
          markerEl.id = markerId;
          markerEl.appendChild( document.createTextNode(markerTextChar) );
          range.insertNode(markerEl);
      }

      if (markerEl) {
          // Lazily create element to be placed next to the selection
          if (!selectionEl) {
              selectionEl = document.getElementById("highlight-options")
              document.body.appendChild(selectionEl);
          }

          // Find markerEl position http://www.quirksmode.org/js/findpos.html
        var obj = markerEl;
        var left = 0, top = 0;
        do {
            left += obj.offsetLeft;
            top += obj.offsetTop;
        } while (obj = obj.offsetParent);

          // Move the button into place.
          // Substitute your jQuery stuff in here
          selectionEl.style.left = (left - 40) + "px";
          selectionEl.style.top = (top - 40) + "px";

          markerEl.parentNode.removeChild(markerEl);
      }
    };
  })();
